{"ast":null,"code":"// https://github.com/rafgraph/fractal\n// this code may be freely distributed under the GNU GPL v3 copyleft licence\n(function () {\n  'use strict';\n\n  if (typeof window.mandelbrotFractal == \"undefined\") {\n    window.mandelbrotFractal = {};\n  }\n\n  window.mandelbrotFractal.App = App;\n\n  function App() {\n    this.elements = {};\n    this.getElements();\n    this.fractal = new window.mandelbrotFractal.Fractal(this.elements.fractalCanvas);\n    this.isTouchDevice = this.determineTouch();\n    this.fullscreenSupported = this.determineFullscreenSupport();\n    this.tapPoints = 0;\n    this.lastTouchStart = null;\n    if (this.isTouchDevice) this.setTouchStyle();\n    this.addEventListeners();\n    this.fractalOptions = {};\n    this.initialSetup();\n  }\n\n  App.prototype.initialSetup = function () {\n    this.fractalOptions.defaults = true;\n    setTimeout(function () {\n      this.updateFractal();\n    }.bind(this), 200);\n  };\n\n  App.prototype.setTouchStyle = function () {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"touch\");\n    document.getElementById(\"zoom-in-info\").innerHTML = \"tap to zoom in\";\n    document.getElementById(\"zoom-out-info\").innerHTML = \"tap 2 fingers to zoom out\";\n    document.getElementById(\"reset-info\").innerHTML = \"tap 3 fingers to reset\";\n    document.getElementById(\"exit-info\").innerHTML = \"tap 4 fingers to exit\";\n  };\n\n  App.prototype.getElements = function () {\n    var els = this.elements;\n    els.launchPage = document.getElementById(\"launch-page\");\n    els.launchFractal = document.getElementById(\"launch-fractal\");\n    els.launch448Fractal = document.getElementById(\"448-escape-time\");\n    els.launch896Fractal = document.getElementById(\"896-escape-time\");\n    els.launch1792Fractal = document.getElementById(\"1792-escape-time\");\n    els.fractalGraphics = document.getElementById(\"fractal-graphics\");\n    els.fractalCanvas = document.getElementById(\"fractal-canvas\");\n    els.loadingFractal = document.getElementById(\"loading-fractal\");\n    els.creditLine = document.getElementById(\"credit-line\");\n  };\n\n  App.prototype.addEventListeners = function () {\n    var els = this.elements;\n    var evFuncs = this.eventFunctions;\n    els.launchFractal.addEventListener(\"click\", evFuncs.launchFractal.bind(this, 224));\n    els.launch448Fractal.addEventListener(\"click\", evFuncs.launchFractal.bind(this, 448));\n    els.launch896Fractal.addEventListener(\"click\", evFuncs.launchFractal.bind(this, 896));\n    els.launch1792Fractal.addEventListener(\"click\", evFuncs.launchFractal.bind(this, 1792));\n    els.fractalCanvas.addEventListener(\"click\", evFuncs.clickFractalCanvas.bind(this));\n\n    if (this.isTouchDevice) {\n      els.launchFractal.addEventListener(\"touchstart\", evFuncs.launchFractal.bind(this, 224));\n      els.launch448Fractal.addEventListener(\"touchstart\", evFuncs.launchFractal.bind(this, 448));\n      els.launch896Fractal.addEventListener(\"touchstart\", evFuncs.launchFractal.bind(this, 896));\n      els.launch1792Fractal.addEventListener(\"touchstart\", evFuncs.launchFractal.bind(this, 1792));\n      els.creditLine.addEventListener(\"touchstart\", evFuncs.touchStartCreditLine.bind(this));\n      els.fractalCanvas.addEventListener(\"touchstart\", evFuncs.touchStartFractalCanvas.bind(this));\n      els.fractalCanvas.addEventListener(\"touchmove\", evFuncs.touchMoveFractalCanvas.bind(this));\n      els.fractalCanvas.addEventListener(\"touchend\", evFuncs.touchEndFractalCanvas.bind(this));\n      window.addEventListener(\"orientationchange\", evFuncs.handleDeviceOrientationChange.bind(this));\n      window.addEventListener(\"mozorientationchange\", evFuncs.handleDeviceOrientationChange.bind(this));\n      window.addEventListener(\"msorientationchange\", evFuncs.handleDeviceOrientationChange.bind(this));\n    }\n\n    if (document.fullscreenEnabled) {\n      document.addEventListener(\"fullscreenchange\", evFuncs.fullscreenChange.bind(this));\n    } else if (document.webkitFullscreenEnabled) {\n      document.addEventListener(\"webkitfullscreenchange\", evFuncs.fullscreenChange.bind(this));\n    } else if (document.mozFullScreenEnabled) {\n      document.addEventListener(\"mozfullscreenchange\", evFuncs.fullscreenChange.bind(this));\n    } else if (document.msFullscreenEnabled) {\n      document.addEventListener(\"MSFullscreenChange\", evFuncs.fullscreenChange.bind(this));\n    }\n  };\n\n  App.prototype.eventFunctions = {\n    touchStartFractalCanvas: function (event) {\n      // required for 2 finger tap to work on android, prevents pinch to zoom\n      event.preventDefault();\n      this.tapPoints += event.changedTouches.length;\n      this.lastTouchStart = new Date();\n    },\n    touchMoveFractalCanvas: function (event) {\n      event.preventDefault();\n    },\n    touchEndFractalCanvas: function (event) {\n      event.preventDefault(); // handle state changes first\n\n      var previousTapPoints = this.tapPoints;\n      this.tapPoints = 0;\n      if (new Date() - this.lastTouchStart > 250) return;\n\n      switch (previousTapPoints) {\n        case 1:\n          this.fractalOptions.zoomInPxPoint = {\n            xPx: event.changedTouches[0].pageX * devicePixelRatio,\n            yPx: event.changedTouches[0].pageY * devicePixelRatio\n          };\n          this.updateFractal();\n          break;\n\n        case 2:\n          this.fractalOptions.zoomOutPxPoint = {\n            xPx: this.elements.fractalCanvas.width / 2,\n            yPx: this.elements.fractalCanvas.height / 2\n          };\n          this.updateFractal();\n          break;\n\n        case 3:\n          this.fractalOptions.resetCords = true;\n          this.updateFractal();\n          break;\n\n        case 4:\n          this.exitFullscreenMode();\n          this.hideFractal();\n          break;\n      }\n    },\n    handleDeviceOrientationChange: function () {\n      if (this.fractalShown()) this.updateFractal();\n    },\n    launchFractal: function (maxEscapeTime, event) {\n      event.preventDefault();\n      this.showFractal(maxEscapeTime);\n    },\n    clickFractalCanvas: function (event) {\n      if (event.shiftKey) {\n        this.fractalOptions.resetCords = true;\n      } else {\n        var eventX = event.offsetX * devicePixelRatio;\n        var eventY = event.offsetY * devicePixelRatio;\n\n        if (event.altKey) {\n          this.fractalOptions.zoomOutPxPoint = {\n            xPx: eventX,\n            yPx: eventY\n          };\n        } else {\n          this.fractalOptions.zoomInPxPoint = {\n            xPx: eventX,\n            yPx: eventY\n          };\n        }\n      }\n\n      this.updateFractal();\n    },\n    fullscreenChange: function () {\n      if (!this.inFullscreenMode()) {\n        this.hideFractal();\n      }\n    },\n    touchStartCreditLine: function (event) {\n      event.preventDefault();\n      var url = this.elements.creditLine.getAttribute(\"href\");\n      window.location.href = url;\n    }\n  };\n\n  App.prototype.updateFractalSize = function () {\n    var width, height;\n\n    if (this.fullscreenSupported) {\n      width = window.screen.width;\n      height = window.screen.height;\n    } else {\n      //important - use clientWidth/Height instead of innerWidth/Height\n      //when zoomed in on mobile device, clientWidth/Height will be the\n      //full size of the browser window (same as when not zoomed in),\n      //while the innerWidth/Height will be the much smaller cropped size\n      //that's zoomed in on\n      width = document.documentElement.clientWidth;\n      height = document.documentElement.clientHeight; //note could also use offsetWidth/Height, as this is size of the html body,\n      //but make sure the body element is sized correctly given fixed/absolute\n      //positioned elements, e.g. body min-height/width 100vw/vh\n      //chose to use clientWidth/Height becasue really what's needed is the size\n      //of the viewport to render fractal the size of the viewport, not the size\n      //of the html body\n      // width = document.documentElement.offsetWidth;\n      // height = document.documentElement.offsetHeight;\n    }\n\n    this.elements.fractalCanvas.setAttribute(\"style\", \"width: \" + width + \"px; height: \" + height + \"px;\");\n    this.fractalOptions.pxWidth = width * devicePixelRatio;\n    this.fractalOptions.pxHeight = height * devicePixelRatio;\n  };\n\n  App.prototype.hideFractal = function () {\n    this.elements.fractalGraphics.style.display = \"none\";\n    this.elements.launchPage.style.display = \"block\";\n  };\n\n  App.prototype.fractalShown = function () {\n    var fractalEl = this.elements.fractalGraphics;\n    var display = window.getComputedStyle(fractalEl, null).getPropertyValue(\"display\");\n    if (display !== \"none\") return true;\n  };\n\n  App.prototype.showFractal = function (maxEscapeTime) {\n    this.elements.fractalGraphics.style.display = \"block\";\n    this.elements.loadingFractal.style.display = \"block\";\n    this.elements.launchPage.style.display = \"none\";\n\n    if (this.fullscreenSupported) {\n      this.enterFullscreenMode(this.elements.fractalGraphics);\n    }\n\n    this.fractalOptions.maxEscapeTime = maxEscapeTime; //long 2.5s wait to ensure instructions shown for at least 2.5s\n    //if don't need to show instructions, would still need ~300ms wait\n    //to allow the transition of show/hide/enterfullscreen to happen before\n    //the fractal starts drawing (which can freeze the browser in the middle\n    //of transistions) - is there a command to not draw until transitions\n    //are finished (including brower's enter fullscreen mode transition)?\n\n    setTimeout(function () {\n      this.updateFractal();\n    }.bind(this), 2500);\n  };\n\n  App.prototype.updateFractal = function () {\n    var fractalShown = this.fractalShown();\n    if (fractalShown) this.elements.loadingFractal.style.display = \"block\"; //hack workaround so the loading fractal div is rendered before the fractal\n    //starts drawing\n\n    setTimeout(function () {\n      this.updateFractalSize();\n      this.fractal.update(this.fractalOptions);\n      this.fractalOptions = {};\n      setTimeout(function () {\n        //hack workaround b/c additional click events while drawing fractal\n        //aren't registered by the browser until after it's done drawing,\n        //so this timeout is needed so the additional clicks, which should do\n        //nothing, are registered on the #loading-fractal div before it is hidden\n        //and not on the canvas, which would cause another zoom\n        if (fractalShown) this.elements.loadingFractal.style.display = \"none\";\n      }.bind(this), 200);\n    }.bind(this), 200);\n  };\n\n  App.prototype.determineTouch = function () {\n    if ('ontouchstart' in window) {\n      return true;\n    }\n\n    return false;\n  }; //fullscreen functions:\n\n\n  App.prototype.determineFullscreenSupport = function () {\n    if (document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled) {\n      return true;\n    }\n\n    return false;\n  };\n\n  App.prototype.inFullscreenMode = function () {\n    if (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement) {\n      return true;\n    }\n\n    return false;\n  };\n\n  App.prototype.exitFullscreenMode = function () {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  };\n\n  App.prototype.enterFullscreenMode = function (element) {\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    }\n  };\n})();","map":{"version":3,"sources":["C:/Users/Matt/Desktop/IM_Web/IM_FracWebV1.0/src/components/app/fracApp.js"],"names":["window","mandelbrotFractal","App","elements","getElements","fractal","Fractal","fractalCanvas","isTouchDevice","determineTouch","fullscreenSupported","determineFullscreenSupport","tapPoints","lastTouchStart","setTouchStyle","addEventListeners","fractalOptions","initialSetup","prototype","defaults","setTimeout","updateFractal","bind","document","getElementsByTagName","classList","add","getElementById","innerHTML","els","launchPage","launchFractal","launch448Fractal","launch896Fractal","launch1792Fractal","fractalGraphics","loadingFractal","creditLine","evFuncs","eventFunctions","addEventListener","clickFractalCanvas","touchStartCreditLine","touchStartFractalCanvas","touchMoveFractalCanvas","touchEndFractalCanvas","handleDeviceOrientationChange","fullscreenEnabled","fullscreenChange","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","event","preventDefault","changedTouches","length","Date","previousTapPoints","zoomInPxPoint","xPx","pageX","devicePixelRatio","yPx","pageY","zoomOutPxPoint","width","height","resetCords","exitFullscreenMode","hideFractal","fractalShown","maxEscapeTime","showFractal","shiftKey","eventX","offsetX","eventY","offsetY","altKey","inFullscreenMode","url","getAttribute","location","href","updateFractalSize","screen","documentElement","clientWidth","clientHeight","setAttribute","pxWidth","pxHeight","style","display","fractalEl","getComputedStyle","getPropertyValue","enterFullscreenMode","update","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","element","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen"],"mappings":"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","sourcesContent":["// https://github.com/rafgraph/fractal\r\n// this code may be freely distributed under the GNU GPL v3 copyleft licence\r\n\r\n(function(){\r\n  'use strict';\r\n\r\n  if (typeof window.mandelbrotFractal == \"undefined\") {\r\n    window.mandelbrotFractal = {};\r\n  }\r\n  window.mandelbrotFractal.App = App;\r\n\r\n\r\n  function App(){\r\n    this.elements = {};\r\n    this.getElements();\r\n    this.fractal = new window.mandelbrotFractal.Fractal(this.elements.fractalCanvas);\r\n    this.isTouchDevice = this.determineTouch();\r\n    this.fullscreenSupported = this.determineFullscreenSupport();\r\n    this.tapPoints = 0;\r\n    this.lastTouchStart = null;\r\n    if (this.isTouchDevice) this.setTouchStyle();\r\n    this.addEventListeners();\r\n    this.fractalOptions = {};\r\n    this.initialSetup();\r\n  }\r\n\r\n\r\n  App.prototype.initialSetup = function(){\r\n    this.fractalOptions.defaults = true;\r\n    setTimeout(function(){\r\n      this.updateFractal();\r\n    }.bind(this), 200);\r\n  };\r\n\r\n\r\n  App.prototype.setTouchStyle = function(){\r\n    document.getElementsByTagName(\"body\")[0].classList.add(\"touch\");\r\n    document.getElementById(\"zoom-in-info\").innerHTML = \"tap to zoom in\";\r\n    document.getElementById(\"zoom-out-info\").innerHTML = \"tap 2 fingers to zoom out\";\r\n    document.getElementById(\"reset-info\").innerHTML = \"tap 3 fingers to reset\";\r\n    document.getElementById(\"exit-info\").innerHTML = \"tap 4 fingers to exit\";\r\n  };\r\n\r\n\r\n  App.prototype.getElements = function(){\r\n    var els = this.elements;\r\n    els.launchPage = document.getElementById(\"launch-page\");\r\n    els.launchFractal = document.getElementById(\"launch-fractal\");\r\n    els.launch448Fractal = document.getElementById(\"448-escape-time\");\r\n    els.launch896Fractal = document.getElementById(\"896-escape-time\");\r\n    els.launch1792Fractal = document.getElementById(\"1792-escape-time\");\r\n    els.fractalGraphics = document.getElementById(\"fractal-graphics\");\r\n    els.fractalCanvas = document.getElementById(\"fractal-canvas\");\r\n    els.loadingFractal = document.getElementById(\"loading-fractal\");\r\n    els.creditLine = document.getElementById(\"credit-line\");\r\n  };\r\n\r\n\r\n  App.prototype.addEventListeners = function(){\r\n    var els = this.elements;\r\n    var evFuncs = this.eventFunctions;\r\n    els.launchFractal.addEventListener(\"click\", evFuncs.launchFractal.bind(this, 224));\r\n    els.launch448Fractal.addEventListener(\"click\", evFuncs.launchFractal.bind(this, 448));\r\n    els.launch896Fractal.addEventListener(\"click\", evFuncs.launchFractal.bind(this, 896));\r\n    els.launch1792Fractal.addEventListener(\"click\", evFuncs.launchFractal.bind(this, 1792));\r\n\r\n    els.fractalCanvas.addEventListener(\"click\", evFuncs.clickFractalCanvas.bind(this));\r\n\r\n    if (this.isTouchDevice) {\r\n      els.launchFractal.addEventListener(\"touchstart\", evFuncs.launchFractal.bind(this, 224));\r\n      els.launch448Fractal.addEventListener(\"touchstart\", evFuncs.launchFractal.bind(this, 448));\r\n      els.launch896Fractal.addEventListener(\"touchstart\", evFuncs.launchFractal.bind(this, 896));\r\n      els.launch1792Fractal.addEventListener(\"touchstart\", evFuncs.launchFractal.bind(this, 1792));\r\n\r\n      els.creditLine.addEventListener(\"touchstart\", evFuncs.touchStartCreditLine.bind(this));\r\n\r\n      els.fractalCanvas.addEventListener(\"touchstart\", evFuncs.touchStartFractalCanvas.bind(this));\r\n      els.fractalCanvas.addEventListener(\"touchmove\", evFuncs.touchMoveFractalCanvas.bind(this));\r\n      els.fractalCanvas.addEventListener(\"touchend\", evFuncs.touchEndFractalCanvas.bind(this));\r\n\r\n      window.addEventListener(\"orientationchange\", evFuncs.handleDeviceOrientationChange.bind(this));\r\n      window.addEventListener(\"mozorientationchange\", evFuncs.handleDeviceOrientationChange.bind(this));\r\n      window.addEventListener(\"msorientationchange\", evFuncs.handleDeviceOrientationChange.bind(this));\r\n    }\r\n\r\n    if (document.fullscreenEnabled) {\r\n      document.addEventListener(\"fullscreenchange\", evFuncs.fullscreenChange.bind(this));\r\n    } else if (document.webkitFullscreenEnabled) {\r\n      document.addEventListener(\"webkitfullscreenchange\", evFuncs.fullscreenChange.bind(this));\r\n    } else if (document.mozFullScreenEnabled) {\r\n      document.addEventListener(\"mozfullscreenchange\", evFuncs.fullscreenChange.bind(this));\r\n    } else if (document.msFullscreenEnabled) {\r\n      document.addEventListener(\"MSFullscreenChange\", evFuncs.fullscreenChange.bind(this));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  App.prototype.eventFunctions = {\r\n\r\n    touchStartFractalCanvas: function(event){\r\n      // required for 2 finger tap to work on android, prevents pinch to zoom\r\n      event.preventDefault();\r\n      this.tapPoints += event.changedTouches.length;\r\n      this.lastTouchStart = new Date();\r\n    },\r\n\r\n    touchMoveFractalCanvas: function(event){\r\n      event.preventDefault();\r\n    },\r\n\r\n    touchEndFractalCanvas: function(event){\r\n      event.preventDefault();\r\n\r\n      // handle state changes first\r\n      var previousTapPoints = this.tapPoints;\r\n      this.tapPoints = 0;\r\n\r\n      if (new Date() - this.lastTouchStart > 250) return;\r\n\r\n      switch (previousTapPoints) {\r\n        case 1:\r\n          this.fractalOptions.zoomInPxPoint = {\r\n            xPx: event.changedTouches[0].pageX * devicePixelRatio,\r\n            yPx: event.changedTouches[0].pageY * devicePixelRatio\r\n          };\r\n          this.updateFractal();\r\n          break;\r\n        case 2:\r\n          this.fractalOptions.zoomOutPxPoint = {\r\n            xPx: this.elements.fractalCanvas.width / 2,\r\n            yPx: this.elements.fractalCanvas.height / 2\r\n          };\r\n          this.updateFractal();\r\n          break;\r\n        case 3:\r\n          this.fractalOptions.resetCords = true;\r\n          this.updateFractal();\r\n          break;\r\n        case 4:\r\n          this.exitFullscreenMode();\r\n          this.hideFractal();\r\n          break;\r\n      }\r\n    },\r\n\r\n    handleDeviceOrientationChange: function(){\r\n      if (this.fractalShown()) this.updateFractal();\r\n    },\r\n\r\n    launchFractal: function(maxEscapeTime, event){\r\n      event.preventDefault();\r\n      this.showFractal(maxEscapeTime);\r\n    },\r\n\r\n    clickFractalCanvas: function(event){\r\n      if (event.shiftKey) {\r\n        this.fractalOptions.resetCords = true;\r\n      } else {\r\n        var eventX = event.offsetX * devicePixelRatio;\r\n        var eventY = event.offsetY * devicePixelRatio;\r\n        if (event.altKey) {\r\n          this.fractalOptions.zoomOutPxPoint = {\r\n            xPx: eventX,\r\n            yPx: eventY\r\n          };\r\n        } else {\r\n          this.fractalOptions.zoomInPxPoint = {\r\n            xPx: eventX,\r\n            yPx: eventY\r\n          };\r\n        }\r\n      }\r\n      this.updateFractal();\r\n    },\r\n\r\n    fullscreenChange: function(){\r\n      if (!this.inFullscreenMode()) {\r\n        this.hideFractal();\r\n      }\r\n    },\r\n\r\n    touchStartCreditLine: function(event){\r\n      event.preventDefault();\r\n      var url = this.elements.creditLine.getAttribute(\"href\");\r\n      window.location.href = url;\r\n    }\r\n  };\r\n\r\n  App.prototype.updateFractalSize = function(){\r\n    var width, height;\r\n\r\n    if (this.fullscreenSupported) {\r\n      width = window.screen.width;\r\n      height = window.screen.height;\r\n    } else {\r\n\r\n      //important - use clientWidth/Height instead of innerWidth/Height\r\n      //when zoomed in on mobile device, clientWidth/Height will be the\r\n      //full size of the browser window (same as when not zoomed in),\r\n      //while the innerWidth/Height will be the much smaller cropped size\r\n      //that's zoomed in on\r\n      width = document.documentElement.clientWidth;\r\n      height = document.documentElement.clientHeight;\r\n\r\n      //note could also use offsetWidth/Height, as this is size of the html body,\r\n      //but make sure the body element is sized correctly given fixed/absolute\r\n      //positioned elements, e.g. body min-height/width 100vw/vh\r\n      //chose to use clientWidth/Height becasue really what's needed is the size\r\n      //of the viewport to render fractal the size of the viewport, not the size\r\n      //of the html body\r\n      // width = document.documentElement.offsetWidth;\r\n      // height = document.documentElement.offsetHeight;\r\n    }\r\n\r\n    this.elements.fractalCanvas.setAttribute(\r\n      \"style\", \"width: \" + width + \"px; height: \" + height + \"px;\"\r\n    );\r\n\r\n    this.fractalOptions.pxWidth = width * devicePixelRatio;\r\n    this.fractalOptions.pxHeight = height * devicePixelRatio;\r\n  };\r\n\r\n\r\n  App.prototype.hideFractal = function(){\r\n    this.elements.fractalGraphics.style.display = \"none\";\r\n    this.elements.launchPage.style.display = \"block\";\r\n  };\r\n\r\n\r\n  App.prototype.fractalShown = function(){\r\n    var fractalEl = this.elements.fractalGraphics;\r\n    var display = window.getComputedStyle(fractalEl, null).getPropertyValue(\"display\");\r\n    if (display !== \"none\") return true;\r\n  };\r\n\r\n\r\n  App.prototype.showFractal = function(maxEscapeTime){\r\n    this.elements.fractalGraphics.style.display = \"block\";\r\n    this.elements.loadingFractal.style.display = \"block\";\r\n    this.elements.launchPage.style.display = \"none\";\r\n    if (this.fullscreenSupported) {\r\n      this.enterFullscreenMode(this.elements.fractalGraphics);\r\n    }\r\n\r\n    this.fractalOptions.maxEscapeTime = maxEscapeTime;\r\n\r\n\r\n    //long 2.5s wait to ensure instructions shown for at least 2.5s\r\n    //if don't need to show instructions, would still need ~300ms wait\r\n    //to allow the transition of show/hide/enterfullscreen to happen before\r\n    //the fractal starts drawing (which can freeze the browser in the middle\r\n    //of transistions) - is there a command to not draw until transitions\r\n    //are finished (including brower's enter fullscreen mode transition)?\r\n    setTimeout(function(){\r\n      this.updateFractal();\r\n    }.bind(this), 2500);\r\n  };\r\n\r\n\r\n  App.prototype.updateFractal = function(){\r\n    var fractalShown = this.fractalShown();\r\n    if (fractalShown) this.elements.loadingFractal.style.display = \"block\";\r\n\r\n\r\n    //hack workaround so the loading fractal div is rendered before the fractal\r\n    //starts drawing\r\n    setTimeout(function(){\r\n      this.updateFractalSize();\r\n      this.fractal.update(this.fractalOptions);\r\n      this.fractalOptions = {};\r\n\r\n      setTimeout(function(){\r\n        //hack workaround b/c additional click events while drawing fractal\r\n        //aren't registered by the browser until after it's done drawing,\r\n        //so this timeout is needed so the additional clicks, which should do\r\n        //nothing, are registered on the #loading-fractal div before it is hidden\r\n        //and not on the canvas, which would cause another zoom\r\n        if (fractalShown) this.elements.loadingFractal.style.display = \"none\";\r\n      }.bind(this), 200);\r\n    }.bind(this), 200);\r\n  };\r\n\r\n\r\n\r\n  App.prototype.determineTouch = function(){\r\n    if ('ontouchstart' in window) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  //fullscreen functions:\r\n\r\n  App.prototype.determineFullscreenSupport = function(){\r\n    if (\r\n      document.fullscreenEnabled ||\r\n      document.webkitFullscreenEnabled ||\r\n      document.mozFullScreenEnabled ||\r\n      document.msFullscreenEnabled\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  App.prototype.inFullscreenMode = function(){\r\n    if (\r\n      document.fullscreenElement ||\r\n      document.webkitFullscreenElement ||\r\n      document.mozFullScreenElement ||\r\n      document.msFullscreenElement\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  App.prototype.exitFullscreenMode = function(){\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n  };\r\n\r\n\r\n  App.prototype.enterFullscreenMode = function(element){\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    }\r\n  };\r\n\r\n})();\r\n"]},"metadata":{},"sourceType":"module"}