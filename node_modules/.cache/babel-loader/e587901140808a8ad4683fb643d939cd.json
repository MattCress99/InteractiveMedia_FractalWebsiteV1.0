{"ast":null,"code":"// https://github.com/rafgraph/fractal\n// this code may be freely distributed under the GNU GPL v3 copyleft licence\n(function(){'use strict';if(typeof window.mandelbrotFractal==\"undefined\"){window.mandelbrotFractal={};}window.mandelbrotFractal.Fractal=Fractal;function Fractal(canvas){this.canvas=canvas;this.ctx=canvas.getContext(\"2d\");this.cords={};this.maxEscapeTime=0;this.startCords={};this.startMaxEscapeTime=0;this.setToDefaults();this.alignCordsToCanvasRatio();}Fractal.prototype.update=function(options){var previousSettings=this.copyCurrentSettings();if(options.defaults)this.setToDefaults();// true/false\nif(options.resetToDefaultCords)this.resetToDefaultCords();// true/false\nif(options.resetCords)this.setCords(this.startCords);// true/false\nif(options.cords)this.setCords(options.cords);if(options.resetMaxEscapeTime)this.setMaxEscapeTime(this.startMaxEscapeTime);// true/false\nif(options.maxEscapeTime)this.setMaxEscapeTime(options.maxEscapeTime);if(options.zoomInPxPoint)this.zoomInPxPoint(options.zoomInPxPoint);if(options.zoomOutPxPoint)this.zoomOutPxPoint(options.zoomOutPxPoint);if(options.zoomInPxBox)this.zoomInPxBox(options.zoomInPxBox);if(options.setAsStartingOptions)this.setStartingOptions();// true/false\nif(options.pxWidth&&Math.floor(options.pxWidth)!==this.canvas.width)this.canvas.width=options.pxWidth;if(options.pxHeight&&Math.floor(options.pxHeight)!==this.canvas.height)this.canvas.height=options.pxHeight;if(!options.distortion)this.alignCordsToCanvasRatio();// by default this will run\nif(this.reDrawRequired(previousSettings))this.draw();};Fractal.prototype.copyCurrentSettings=function(){return{cords:JSON.parse(JSON.stringify(this.cords)),maxEscapeTime:this.maxEscapeTime,canvasWidth:this.canvas.width,canvasHeight:this.canvas.height};};Fractal.prototype.reDrawRequired=function(previousSettings){if(previousSettings.maxEscapeTime===this.maxEscapeTime&&previousSettings.canvasWidth===this.canvas.width&&previousSettings.canvasHeight===this.canvas.height&&previousSettings.cords.xCartMin===this.cords.xCartMin&&previousSettings.cords.xCartMax===this.cords.xCartMax&&previousSettings.cords.yCartMin===this.cords.yCartMin&&previousSettings.cords.yCartMax===this.cords.yCartMax){return false;}else{return true;}};Fractal.prototype.setToDefaults=function(){this.resetToDefaultCords();this.maxEscapeTime=224;this.setStartingOptions();};Fractal.prototype.resetToDefaultCords=function(){this.setCords({xCartMin:-2.1,xCartMax:0.8,yCartMin:-1.2,yCartMax:1.2});this.startCords=JSON.parse(JSON.stringify(this.cords));};Fractal.prototype.setCords=function(cords){var properties=['xCartMin','xCartMax','yCartMin','yCartMax'];properties.forEach(function(property){if(!Number.isFinite(cords[property])){throw\"Error with \"+property+\" cord, its value is: \"+cords[property];}});properties.forEach(function(property){this.cords[property]=cords[property];}.bind(this));};Fractal.prototype.setMaxEscapeTime=function(maxEscapeTime){if(maxEscapeTime>1792){this.maxEscapeTime=1792;}else if(maxEscapeTime<14){this.maxEscapeTime=14;}else{this.maxEscapeTime=Math.floor(maxEscapeTime/7)*7;}};Fractal.prototype.zoomInPxPoint=function(pxPoint){var zoomMultiple=0.2;this.determineZoomPxCords(zoomMultiple,pxPoint);};Fractal.prototype.zoomOutPxPoint=function(pxPoint){var zoomMultiple=5;this.determineZoomPxCords(zoomMultiple,pxPoint);};Fractal.prototype.zoomInPxBox=function(pxCords){this.convertPxCordsToCartCords(pxCords);};Fractal.prototype.determineZoomPxCords=function(zoomMultiple,pxPoint){var diffPxWidth=Math.floor(this.canvas.width*(zoomMultiple/2));var diffPxHeight=Math.floor(this.canvas.height*(zoomMultiple/2));var pxCords={xPxMin:pxPoint.xPx-diffPxWidth,xPxMax:pxPoint.xPx+diffPxWidth,yPxMin:pxPoint.yPx-diffPxHeight,yPxMax:pxPoint.yPx+diffPxHeight};this.convertPxCordsToCartCords(pxCords);};Fractal.prototype.convertPxCordsToCartCords=function(pxCords){var newCartCords={xCartMin:this.pixelToCartX(pxCords.xPxMin),xCartMax:this.pixelToCartX(pxCords.xPxMax),yCartMin:this.pixelToCartY(pxCords.yPxMin),yCartMax:this.pixelToCartY(pxCords.yPxMax)};this.setCords(newCartCords);};Fractal.prototype.setStartingOptions=function(){this.startCords=JSON.parse(JSON.stringify(this.cords));this.startMaxEscapeTime=this.maxEscapeTime;};Fractal.prototype.alignCordsToCanvasRatio=function(){var ctWidth=this.cords.xCartMax-this.cords.xCartMin;var ctHeight=this.cords.yCartMax-this.cords.yCartMin;var pxWidth=this.canvas.width;var pxHeight=this.canvas.height;if(ctHeight/ctWidth===pxHeight/pxWidth)return;if(ctHeight/ctWidth<pxHeight/pxWidth){var oldCtHeight=ctHeight;ctHeight=ctWidth*(pxHeight/pxWidth);var diff=ctHeight-oldCtHeight;this.cords.yCartMax+=diff/2;this.cords.yCartMin-=diff/2;}else{var oldCtWidth=ctWidth;ctWidth=ctHeight*(pxWidth/pxHeight);diff=ctWidth-oldCtWidth;this.cords.xCartMax+=diff/2;this.cords.xCartMin-=diff/2;}};Fractal.prototype.pixelToCartX=function(x){var pxRatio=x/this.canvas.width;var cartWidth=this.cords.xCartMax-this.cords.xCartMin;return this.cords.xCartMin+cartWidth*pxRatio;};Fractal.prototype.pixelToCartY=function(y){var pxRatio=y/this.canvas.height;var cartHeight=this.cords.yCartMax-this.cords.yCartMin;return this.cords.yCartMin+cartHeight*pxRatio;};Fractal.prototype.draw=function(){var imageData=this.drawToImageData();this.ctx.putImageData(imageData,0,0);// use the following to print size on canvas for debugging\n// var fontSize = 1.25 * devicePixelRatio;\n// this.ctx.font=\"300 \" + fontSize + \"em Helvetica\";\n// this.ctx.fillStyle = \"#c0c0c0\";\n// this.ctx.fillText(\"w: \" + imageData.width + \" h: \" + imageData.height, 75 * devicePixelRatio, 165 * devicePixelRatio);\n};Fractal.prototype.drawToImageData=function(){var imageData=new ImageData(this.canvas.width,this.canvas.height);var yCart,xCart,escapeTime,rgbNum,index;for(var y=0;y<imageData.height;y++){yCart=this.pixelToCartY(y);for(var x=0;x<imageData.width;x++){xCart=this.pixelToCartX(x);escapeTime=this.calcEscapeTime(xCart,yCart);rgbNum=this.rgbNum(escapeTime);// debugging console log\n// console.log(x + \", \" + y + \" - \" + Math.round(xCart * 100) / 100 + \", \" + Math.round(yCart * 100) / 100 + \" - \" + escapeTime + \" - \" + rgbNum[0] + \", \" + rgbNum[1] + \", \" + rgbNum[2]);\nindex=(y*imageData.width+x)*4;imageData.data[index]=rgbNum[0];imageData.data[index+1]=rgbNum[1];imageData.data[index+2]=rgbNum[2];imageData.data[index+3]=255;}}console.log(\"max escape time: \"+this.maxEscapeTime);console.log(\"cords: \",this.cords);console.log(\"pixels: width: \"+imageData.width+\", height: \"+imageData.height);console.log(\"done drawToImageData\");return imageData;};Fractal.prototype.calcEscapeTime=function(xCart,yCart){var escapeTime=0;var oldX=xCart;var oldY=yCart;var newX,newY;while(this.distFromOrigin(oldX,oldY)<2&&escapeTime<this.maxEscapeTime){newX=oldX*oldX-oldY*oldY+xCart;newY=2*oldX*oldY+yCart;oldX=newX;oldY=newY;escapeTime+=1;}return escapeTime;};Fractal.prototype.distFromOrigin=function(x,y){return Math.sqrt(x*x+y*y);};///////////////////////////////////////////////////////////////////////////////\n//coloring algorithim:\n//start with 2 of the 3 red, green and blue values fixed at either 0 or 255,\n//then increase the other R, G or B value in a given number of increments\n//repeat this for seven cases and you get a maximum of 1792 colors (7*256)\n//note that white repeats 3 times, at the end of cases 2, 4 and 6\n//the seven case are:\n//case 0: R=0, B=0, increase green from 0 to 255\n//case 1: R=0 G=255, increase blue from 0 to 255\n//case 2: G=255, B=255, increase red form 0 to 255\n//case 3: G=0, B=255, increase red from 0 to 255\n//case 4: R=255, B=255, increase green from 0 to 255\n//case 5: R=255, B=0, increase green from 0 to 255\n//case 6: R=255, G=255, increase blue from 0 to 255\n///////////////////////////////////////////////////////////////////////////////\nFractal.prototype.rgbNum=function(escapeTime){if(escapeTime<=2){return[0,0,0];}else if(escapeTime===this.maxEscapeTime){return[0,25,0];}var redNum;var greenNum;var blueNum;var rgbIncrements=Math.floor(this.maxEscapeTime/7);var caseNum=Math.floor(escapeTime/rgbIncrements);var remainNum=escapeTime%rgbIncrements;switch(caseNum){case 0:redNum=0;greenNum=Math.floor(256/rgbIncrements)*remainNum;blueNum=0;break;case 1:redNum=0;greenNum=255;blueNum=Math.floor(256/rgbIncrements)*remainNum;break;case 2:redNum=Math.floor(256/rgbIncrements)*remainNum;greenNum=255;blueNum=255;break;case 3:redNum=Math.floor(256/rgbIncrements)*remainNum;greenNum=0;blueNum=255;break;case 4:redNum=255;greenNum=Math.floor(256/rgbIncrements)*remainNum;blueNum=255;break;case 5:redNum=255;greenNum=Math.floor(256/rgbIncrements)*remainNum;blueNum=0;break;case 6:redNum=255;greenNum=255;blueNum=Math.floor(256/rgbIncrements)*remainNum;break;}return[redNum,greenNum,blueNum];};})();","map":{"version":3,"sources":["C:/Users/Matt/Desktop/IM_Web/IM_FracWebV1.0/src/components/app/fractalApp.js"],"names":["window","mandelbrotFractal","Fractal","canvas","ctx","getContext","cords","maxEscapeTime","startCords","startMaxEscapeTime","setToDefaults","alignCordsToCanvasRatio","prototype","update","options","previousSettings","copyCurrentSettings","defaults","resetToDefaultCords","resetCords","setCords","resetMaxEscapeTime","setMaxEscapeTime","zoomInPxPoint","zoomOutPxPoint","zoomInPxBox","setAsStartingOptions","setStartingOptions","pxWidth","Math","floor","width","pxHeight","height","distortion","reDrawRequired","draw","JSON","parse","stringify","canvasWidth","canvasHeight","xCartMin","xCartMax","yCartMin","yCartMax","properties","forEach","property","Number","isFinite","bind","pxPoint","zoomMultiple","determineZoomPxCords","pxCords","convertPxCordsToCartCords","diffPxWidth","diffPxHeight","xPxMin","xPx","xPxMax","yPxMin","yPx","yPxMax","newCartCords","pixelToCartX","pixelToCartY","ctWidth","ctHeight","oldCtHeight","diff","oldCtWidth","x","pxRatio","cartWidth","y","cartHeight","imageData","drawToImageData","putImageData","ImageData","yCart","xCart","escapeTime","rgbNum","index","calcEscapeTime","data","console","log","oldX","oldY","newX","newY","distFromOrigin","sqrt","redNum","greenNum","blueNum","rgbIncrements","caseNum","remainNum"],"mappings":"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","sourcesContent":["// https://github.com/rafgraph/fractal\r\n// this code may be freely distributed under the GNU GPL v3 copyleft licence\r\n\r\n(function(){\r\n  'use strict';\r\n\r\n  if (typeof window.mandelbrotFractal == \"undefined\") {\r\n    window.mandelbrotFractal = {};\r\n  }\r\n  window.mandelbrotFractal.Fractal = Fractal;\r\n  \r\n  function Fractal(canvas){\r\n    this.canvas = canvas;\r\n    this.ctx = canvas.getContext(\"2d\");\r\n    this.cords = {};\r\n    this.maxEscapeTime = 0;\r\n    this.startCords = {};\r\n    this.startMaxEscapeTime = 0;\r\n    this.setToDefaults();\r\n    this.alignCordsToCanvasRatio();\r\n  }\r\n\r\n\r\n  Fractal.prototype.update = function(options){\r\n    var previousSettings = this.copyCurrentSettings();\r\n\r\n    if (options.defaults) this.setToDefaults(); // true/false\r\n    if (options.resetToDefaultCords) this.resetToDefaultCords(); // true/false\r\n    if (options.resetCords) this.setCords(this.startCords); // true/false\r\n    if (options.cords) this.setCords(options.cords);\r\n    if (options.resetMaxEscapeTime) this.setMaxEscapeTime(this.startMaxEscapeTime); // true/false\r\n    if (options.maxEscapeTime) this.setMaxEscapeTime(options.maxEscapeTime);\r\n    if (options.zoomInPxPoint) this.zoomInPxPoint(options.zoomInPxPoint);\r\n    if (options.zoomOutPxPoint) this.zoomOutPxPoint(options.zoomOutPxPoint);\r\n    if (options.zoomInPxBox) this.zoomInPxBox(options.zoomInPxBox);\r\n    if (options.setAsStartingOptions) this.setStartingOptions(); // true/false\r\n    if (options.pxWidth && Math.floor(options.pxWidth) !== this.canvas.width)\r\n      this.canvas.width = options.pxWidth;\r\n    if (options.pxHeight && Math.floor(options.pxHeight) !== this.canvas.height)\r\n      this.canvas.height = options.pxHeight;\r\n    if (!options.distortion) this.alignCordsToCanvasRatio(); // by default this will run\r\n    if (this.reDrawRequired(previousSettings)) this.draw();\r\n  };\r\n\r\n\r\n  Fractal.prototype.copyCurrentSettings = function(){\r\n    return {\r\n      cords: JSON.parse(JSON.stringify(this.cords)),\r\n      maxEscapeTime: this.maxEscapeTime,\r\n      canvasWidth: this.canvas.width,\r\n      canvasHeight: this.canvas.height\r\n    };\r\n  };\r\n\r\n\r\n  Fractal.prototype.reDrawRequired = function(previousSettings){\r\n    if (\r\n      previousSettings.maxEscapeTime === this.maxEscapeTime &&\r\n      previousSettings.canvasWidth === this.canvas.width &&\r\n      previousSettings.canvasHeight === this.canvas.height &&\r\n      previousSettings.cords.xCartMin === this.cords.xCartMin &&\r\n      previousSettings.cords.xCartMax === this.cords.xCartMax &&\r\n      previousSettings.cords.yCartMin === this.cords.yCartMin &&\r\n      previousSettings.cords.yCartMax === this.cords.yCartMax\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n\r\n  Fractal.prototype.setToDefaults = function(){\r\n    this.resetToDefaultCords();\r\n    this.maxEscapeTime = 224;\r\n    this.setStartingOptions();\r\n  };\r\n\r\n\r\n  Fractal.prototype.resetToDefaultCords = function(){\r\n    this.setCords({\r\n      xCartMin: -2.1,\r\n      xCartMax: 0.8,\r\n      yCartMin: -1.2,\r\n      yCartMax: 1.2\r\n    });\r\n    this.startCords = JSON.parse(JSON.stringify(this.cords));\r\n  };\r\n\r\n\r\n  Fractal.prototype.setCords = function(cords){\r\n    var properties = ['xCartMin', 'xCartMax', 'yCartMin', 'yCartMax'];\r\n\r\n    properties.forEach(function(property){\r\n      if (!Number.isFinite(cords[property])) {\r\n        throw \"Error with \" + property + \" cord, its value is: \" + cords[property];\r\n      }\r\n    });\r\n\r\n    properties.forEach(function(property){\r\n      this.cords[property] = cords[property];\r\n    }.bind(this));\r\n  };\r\n\r\n\r\n  Fractal.prototype.setMaxEscapeTime = function(maxEscapeTime){\r\n    if (maxEscapeTime > 1792) {\r\n      this.maxEscapeTime = 1792;\r\n    } else if (maxEscapeTime < 14) {\r\n      this.maxEscapeTime = 14;\r\n    } else {\r\n      this.maxEscapeTime = Math.floor(maxEscapeTime / 7) * 7;\r\n    }\r\n  };\r\n\r\n\r\n  Fractal.prototype.zoomInPxPoint = function(pxPoint) {\r\n    var zoomMultiple = 0.2;\r\n    this.determineZoomPxCords(zoomMultiple, pxPoint);\r\n  };\r\n\r\n\r\n  Fractal.prototype.zoomOutPxPoint = function(pxPoint) {\r\n    var zoomMultiple = 5;\r\n    this.determineZoomPxCords(zoomMultiple, pxPoint);\r\n  };\r\n\r\n\r\n  Fractal.prototype.zoomInPxBox = function(pxCords) {\r\n    this.convertPxCordsToCartCords(pxCords);\r\n  };\r\n\r\n\r\n  Fractal.prototype.determineZoomPxCords = function(zoomMultiple, pxPoint){\r\n    var diffPxWidth = Math.floor(this.canvas.width * (zoomMultiple / 2));\r\n    var diffPxHeight = Math.floor(this.canvas.height * (zoomMultiple / 2));\r\n\r\n    var pxCords = {\r\n      xPxMin: pxPoint.xPx - diffPxWidth,\r\n      xPxMax: pxPoint.xPx + diffPxWidth,\r\n      yPxMin: pxPoint.yPx - diffPxHeight,\r\n      yPxMax: pxPoint.yPx + diffPxHeight\r\n    };\r\n\r\n    this.convertPxCordsToCartCords(pxCords);\r\n  };\r\n\r\n\r\n  Fractal.prototype.convertPxCordsToCartCords = function(pxCords){\r\n    var newCartCords = {\r\n      xCartMin: this.pixelToCartX(pxCords.xPxMin),\r\n      xCartMax: this.pixelToCartX(pxCords.xPxMax),\r\n      yCartMin: this.pixelToCartY(pxCords.yPxMin),\r\n      yCartMax: this.pixelToCartY(pxCords.yPxMax)\r\n    };\r\n\r\n    this.setCords(newCartCords);\r\n  };\r\n\r\n\r\n  Fractal.prototype.setStartingOptions = function(){\r\n    this.startCords = JSON.parse(JSON.stringify(this.cords));\r\n    this.startMaxEscapeTime = this.maxEscapeTime;\r\n  };\r\n\r\n\r\n  Fractal.prototype.alignCordsToCanvasRatio = function() {\r\n    var ctWidth = this.cords.xCartMax - this.cords.xCartMin;\r\n    var ctHeight = this.cords.yCartMax - this.cords.yCartMin;\r\n    var pxWidth = this.canvas.width;\r\n    var pxHeight = this.canvas.height;\r\n    if (ctHeight / ctWidth === pxHeight / pxWidth) return;\r\n\r\n    if (ctHeight / ctWidth < pxHeight / pxWidth) {\r\n      var oldCtHeight = ctHeight;\r\n      ctHeight = ctWidth * (pxHeight / pxWidth);\r\n      var diff = ctHeight - oldCtHeight;\r\n      this.cords.yCartMax += diff / 2;\r\n      this.cords.yCartMin -= diff / 2;\r\n    } else {\r\n      var oldCtWidth = ctWidth;\r\n      ctWidth = ctHeight * (pxWidth / pxHeight);\r\n      diff = ctWidth - oldCtWidth;\r\n      this.cords.xCartMax += (diff / 2);\r\n      this.cords.xCartMin -= (diff / 2);\r\n    }\r\n  };\r\n\r\n\r\n  Fractal.prototype.pixelToCartX = function(x){\r\n    var pxRatio = x / this.canvas.width;\r\n    var cartWidth = this.cords.xCartMax - this.cords.xCartMin;\r\n    return this.cords.xCartMin + (cartWidth * pxRatio);\r\n  };\r\n\r\n\r\n  Fractal.prototype.pixelToCartY = function(y){\r\n    var pxRatio = y / this.canvas.height;\r\n    var cartHeight = this.cords.yCartMax - this.cords.yCartMin;\r\n    return this.cords.yCartMin + (cartHeight * pxRatio);\r\n  };\r\n\r\n\r\n  Fractal.prototype.draw = function(){\r\n    var imageData = this.drawToImageData();\r\n    this.ctx.putImageData(imageData, 0, 0);\r\n\r\n    // use the following to print size on canvas for debugging\r\n    // var fontSize = 1.25 * devicePixelRatio;\r\n    // this.ctx.font=\"300 \" + fontSize + \"em Helvetica\";\r\n    // this.ctx.fillStyle = \"#c0c0c0\";\r\n    // this.ctx.fillText(\"w: \" + imageData.width + \" h: \" + imageData.height, 75 * devicePixelRatio, 165 * devicePixelRatio);\r\n  };\r\n\r\n\r\n  Fractal.prototype.drawToImageData = function(){\r\n    var imageData = new ImageData(this.canvas.width, this.canvas.height);\r\n    var yCart, xCart, escapeTime, rgbNum, index;\r\n\r\n    for (var y = 0; y < imageData.height; y++){\r\n      yCart = this.pixelToCartY(y);\r\n\r\n      for (var x = 0; x < imageData.width; x++){\r\n        xCart = this.pixelToCartX(x);\r\n        escapeTime = this.calcEscapeTime(xCart, yCart);\r\n\r\n        rgbNum = this.rgbNum(escapeTime);\r\n\r\n        // debugging console log\r\n        // console.log(x + \", \" + y + \" - \" + Math.round(xCart * 100) / 100 + \", \" + Math.round(yCart * 100) / 100 + \" - \" + escapeTime + \" - \" + rgbNum[0] + \", \" + rgbNum[1] + \", \" + rgbNum[2]);\r\n\r\n        index = (y * imageData.width + x) * 4;\r\n        imageData.data[index] = rgbNum[0];\r\n        imageData.data[index + 1] = rgbNum[1];\r\n        imageData.data[index + 2] = rgbNum[2];\r\n        imageData.data[index + 3] = 255;\r\n      }\r\n    }\r\n\r\n    console.log(\"max escape time: \" + this.maxEscapeTime);\r\n    console.log(\"cords: \", this.cords);\r\n    console.log(\"pixels: width: \" + imageData.width + \", height: \" +imageData.height);\r\n    console.log(\"done drawToImageData\");\r\n    return imageData;\r\n  };\r\n\r\n\r\n  Fractal.prototype.calcEscapeTime = function(xCart, yCart){\r\n\r\n    var escapeTime = 0;\r\n    var oldX = xCart;\r\n    var oldY = yCart;\r\n    var newX, newY;\r\n\r\n    while (this.distFromOrigin(oldX, oldY) < 2 && escapeTime < this.maxEscapeTime) {\r\n      newX = (oldX * oldX) - (oldY * oldY) + xCart;\r\n      newY = (2 * oldX * oldY) + yCart;\r\n\r\n      oldX = newX;\r\n      oldY = newY;\r\n\r\n      escapeTime += 1;\r\n    }\r\n\r\n    return escapeTime;\r\n  };\r\n\r\n\r\n  Fractal.prototype.distFromOrigin = function(x, y){\r\n    return Math.sqrt(x * x + y * y);\r\n  };\r\n\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n  //coloring algorithim:\r\n  //start with 2 of the 3 red, green and blue values fixed at either 0 or 255,\r\n  //then increase the other R, G or B value in a given number of increments\r\n  //repeat this for seven cases and you get a maximum of 1792 colors (7*256)\r\n  //note that white repeats 3 times, at the end of cases 2, 4 and 6\r\n  //the seven case are:\r\n  //case 0: R=0, B=0, increase green from 0 to 255\r\n  //case 1: R=0 G=255, increase blue from 0 to 255\r\n  //case 2: G=255, B=255, increase red form 0 to 255\r\n  //case 3: G=0, B=255, increase red from 0 to 255\r\n  //case 4: R=255, B=255, increase green from 0 to 255\r\n  //case 5: R=255, B=0, increase green from 0 to 255\r\n  //case 6: R=255, G=255, increase blue from 0 to 255\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  Fractal.prototype.rgbNum = function(escapeTime){\r\n    if (escapeTime <= 2) {\r\n      return [0, 0, 0];\r\n    } else if (escapeTime === this.maxEscapeTime) {\r\n      return [0, 25, 0];\r\n    }\r\n\r\n    var redNum;\r\n    var greenNum;\r\n    var blueNum;\r\n    var rgbIncrements = Math.floor(((this.maxEscapeTime) / 7));\r\n    var caseNum = Math.floor(escapeTime / rgbIncrements);\r\n    var remainNum = escapeTime % rgbIncrements;\r\n\r\n    switch (caseNum) {\r\n      case 0:\r\n        redNum = 0;\r\n        greenNum = Math.floor(256 / rgbIncrements) * remainNum;\r\n        blueNum = 0;\r\n        break;\r\n      case 1:\r\n        redNum = 0;\r\n        greenNum = 255;\r\n        blueNum = Math.floor(256 / rgbIncrements) * remainNum;\r\n        break;\r\n      case 2:\r\n        redNum = Math.floor(256 / rgbIncrements) * remainNum;\r\n        greenNum = 255;\r\n        blueNum = 255;\r\n        break;\r\n      case 3:\r\n        redNum = Math.floor(256 / rgbIncrements) * remainNum;\r\n        greenNum = 0;\r\n        blueNum = 255;\r\n        break;\r\n      case 4:\r\n        redNum = 255;\r\n        greenNum = Math.floor(256 / rgbIncrements) * remainNum;\r\n        blueNum = 255;\r\n        break;\r\n      case 5:\r\n        redNum = 255;\r\n        greenNum = Math.floor(256 / rgbIncrements) * remainNum;\r\n        blueNum = 0;\r\n        break;\r\n      case 6:\r\n        redNum = 255;\r\n        greenNum = 255;\r\n        blueNum = Math.floor(256 / rgbIncrements) * remainNum;\r\n        break;\r\n    }\r\n\r\n    return [redNum, greenNum, blueNum];\r\n  };\r\n\r\n})();\r\n"]},"metadata":{},"sourceType":"module"}